[{"path":"https://rformassspectrometry.github.io/MsIO/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Johannes Rainer. Author, maintainer. Philippine Louail. Author. Laurent Gatto. Contributor.","code":""},{"path":"https://rformassspectrometry.github.io/MsIO/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Rainer J, Louail P (2024). MsIO: Serializing restoring/importing mass spectrometry data objects. R package version 0.0.2, https://github.com/RforMassSpectrometry/MsIO.","code":"@Manual{,   title = {MsIO: Serializing and restoring/importing mass spectrometry data objects},   author = {Johannes Rainer and Philippine Louail},   year = {2024},   note = {R package version 0.0.2},   url = {https://github.com/RforMassSpectrometry/MsIO}, }"},{"path":"https://rformassspectrometry.github.io/MsIO/index.html","id":"msio","dir":"","previous_headings":"","what":"Serializing and restoring/importing mass spectrometry data objects","title":"Serializing and restoring/importing mass spectrometry data objects","text":"MsIO package supports serializing restoring/importing mass spectrometry (MS) data objects language agnostic file formats. Ultimately, package aims enabling easier exchange data results different software tools programming languages. R provides save() load() functions possibility serialize (later import) variables objects disk, data stored R-specific binary format easily readable programming languages software tools. Exchange data results programming languages tools however important avoid need re-implement methodology algorithms make existing software create powerful analysis workflow. MsIO package defines generic export/import methods along parameter objects allow select configure file format(s). possible, integrated approaches Bioconductor alabastar.base package. particular MsIO integrate alabastar.base providing saveObject() methods exporting/importing MS specific data objects JSON file formats, , top , supporting serializing MS data objects additional different formats thus supporting specific file formats defined software.","code":""},{"path":"https://rformassspectrometry.github.io/MsIO/index.html","id":"contributions","dir":"","previous_headings":"","what":"Contributions","title":"Serializing and restoring/importing mass spectrometry data objects","text":"Contributions highly welcome follow contribution guidelines. Also, please check coding style guidelines RforMassSpectrometry vignette.","code":""},{"path":"https://rformassspectrometry.github.io/MsIO/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Serializing and restoring/importing mass spectrometry data objects","text":"MsIO code provided permissive Artistic 2.0 license. documentation, including manual pages vignettes, distributed CC -SA license.","code":""},{"path":"https://rformassspectrometry.github.io/MsIO/reference/PlainTextParam.html","id":null,"dir":"Reference","previous_headings":"","what":"Store contents of MS objects as plain text files — PlainTextParam","title":"Store contents of MS objects as plain text files — PlainTextParam","text":"saveMsObject() readMsObject() methods PlainTextParam option enable users save/load different type mass spectrometry (MS) object collections plain text files /specified folder. folder, defined path parameter, created storeResults() function. Writing data folder contains already exported data result error. data exported plain text files, possible tabulator delimited text files. Data exported using R's write.table() function, thus, text files also contain row names (first column) well column names (header). Strings text files quoted. information, particular content parameter classes within objects, stored JSON format instead. MS object currently supported import export parameter : MsBackendMzR object, defined (Spectra) package. Spectra object, defined (Spectra) package. MsExperiment object, defined (MsExperiment) package. XcmsExperiment object, defined (xcms) package. See respective section details formats exported files.","code":""},{"path":"https://rformassspectrometry.github.io/MsIO/reference/PlainTextParam.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Store contents of MS objects as plain text files — PlainTextParam","text":"","code":"PlainTextParam(path = tempdir())  # S4 method for class 'MsBackendMzR,PlainTextParam' saveMsObject(object, param)  # S4 method for class 'MsBackendMzR,PlainTextParam' readMsObject(object, param, spectraPath = character())  # S4 method for class 'MsExperiment,PlainTextParam' saveMsObject(object, param)  # S4 method for class 'MsExperiment,PlainTextParam' readMsObject(object, param, ...)  # S4 method for class 'Spectra,PlainTextParam' saveMsObject(object, param)  # S4 method for class 'Spectra,PlainTextParam' readMsObject(object, param, ...)  # S4 method for class 'XcmsExperiment,PlainTextParam' saveMsObject(object, param)  # S4 method for class 'XcmsExperiment,PlainTextParam' readMsObject(object, param, ...)"},{"path":"https://rformassspectrometry.github.io/MsIO/reference/PlainTextParam.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Store contents of MS objects as plain text files — PlainTextParam","text":"path PlainTextParam(): character(1), defining files going stored/ loaded . default path = tempdir(). object saveMsObject(): MS data object save, readMsObject(): MS data object returned param object defining (eventually configuring) file format file name directory /data object exported/imported. spectraPath readMsObject(): character(1) optionally allowing define (absolute) path spectra files (data storage files) can found. parameter passed loadResults() method MsBackend(). ... Additional parameters passed internal functions. E.g. parameter spectraPath (see ).","code":""},{"path":"https://rformassspectrometry.github.io/MsIO/reference/PlainTextParam.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Store contents of MS objects as plain text files — PlainTextParam","text":"PlainTextParam(): PlainTextParam class. saveMsObject() return anything saves object collections different plain text files folder. readMsObject() method returns restored data instance class specified parameter object.","code":""},{"path":"https://rformassspectrometry.github.io/MsIO/reference/PlainTextParam.html","id":"on-disk-storage-for-msbackendmzr-objects","dir":"Reference","previous_headings":"","what":"On-disk storage for MsBackendMzR objects","title":"Store contents of MS objects as plain text files — PlainTextParam","text":"MsBackendMzR objects, defined Spectra package, following file stored: backend's spectraData() stored tabular format text file named ms_backend_data.txt. row tab-delimited text file corresponds spectrum respective metadata columns.","code":""},{"path":"https://rformassspectrometry.github.io/MsIO/reference/PlainTextParam.html","id":"on-disk-storage-for-spectra-objects","dir":"Reference","previous_headings":"","what":"On-disk storage for Spectra objects","title":"Store contents of MS objects as plain text files — PlainTextParam","text":"Spectra objects, defined Spectra package, files listed stored. parameter passed saveMsObject() method using ... parameter passed saveMsObject() call Spectra's backend. processingQueueVariables, processing, processingChunkSize(), backend class information object stored text file named spectra_slots.txt. slots stored name slot written, followed \"=\" content slot. processing queue Spectra object, ensuring spectra data modifications retained, stored json file named spectra_processing_queue.json. file written processing step separated line includes information parameters functions used step. Spectra's MS data (.e. backend) stored/exported using saveMsObject() method respective backend type. Currently backends saveMsObject() method implemented (see ) supported.","code":""},{"path":"https://rformassspectrometry.github.io/MsIO/reference/PlainTextParam.html","id":"on-disk-storage-for-msexperiment-objects","dir":"Reference","previous_headings":"","what":"On-disk storage for MsExperiment objects","title":"Store contents of MS objects as plain text files — PlainTextParam","text":"MsExperiment objects, defined MsExperiment package, exported data related text files listed . parameter passed saveMsObject() ... passed saveMsObject() calls individual MS data object(s) within MsExperiment. Note present saveMsObject() PlainTextParam export full content MsExperiment, .e. slots @experimentFiles, @qdata, @otherData @metadata currently saved. sampleData() stored text file named ms_experiment_sample_data.txt. row file corresponds sample respective metadata columns. links sample data data within MsExperiment stored text files named ms_experiment_sample_data_links_....txt, \"...\" referring data slot samples linked. file contains mapping sample data elements specific data slot (e.g., Spectra). files tabulator delimited text files two columns integer values, first representing index sample objects sampleData(), second index assigned element respective object slot. table \"ms_experiment_element_metadata.txt\" contains metadata available mappings. MsExperiment contains Spectra object MS data, content exported folder using saveMsObject() call (see details exporting Spectra objects text files).","code":""},{"path":"https://rformassspectrometry.github.io/MsIO/reference/PlainTextParam.html","id":"on-disk-storage-for-xcmsexperiment-objects","dir":"Reference","previous_headings":"","what":"On-disk storage for XcmsExperiment objects","title":"Store contents of MS objects as plain text files — PlainTextParam","text":"XcmsExperiment objects, defined xcms package, exported data related text files listed . parameter passed saveMsObject() ... passed saveMsObject() calls individual MS data object(s) within XcmsExperiment. chromatographic peak information obtained chromPeaks() chromPeaksData() stored tabular format text files xcms_experiment_chrom_peaks.txt xcms_experiment_chrom_peak_data.txt, respectively. first file's rows represent single peaks respective metadata columns (numeric information). second file contains arbitrary additional information/metadata peak (row one chrom peak). featureDefinitions() stored text file named xcms_experiment_feature_definitions.txt. Additionally, second file named ms_experiment_feature_peak_index.txt generated connect features corresponding chromatographic peaks. row first file corresponds feature respective metadata columns. second file contains mapping features chromatographic peaks (one peak ID per row). processHistory() information object stored file named xcms_experiment_process_history.json JSON format. XcmsExperiment directly extends MsExperiment class, thus, MS data saved using call saveMsObject MsExperiment (see information).","code":""},{"path":"https://rformassspectrometry.github.io/MsIO/reference/PlainTextParam.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Store contents of MS objects as plain text files — PlainTextParam","text":"Philippine Louail","code":""},{"path":"https://rformassspectrometry.github.io/MsIO/reference/saveMsObject.html","id":null,"dir":"Reference","previous_headings":"","what":"Save and load MS data objects to and from different file formats — saveMsObject","title":"Save and load MS data objects to and from different file formats — saveMsObject","text":"saveMsObject() readMsObject() methods allow serializing restoring/importing mass spectrometry (MS) data objects language agnostic file formats. type  configuration file format defined second argument method, param. saveMsObject(object, param): saves MS data object object file(s) format defined param. readMsObject(object, param): object defines type MS object returned function param format file name(s) data restored/imported.","code":""},{"path":"https://rformassspectrometry.github.io/MsIO/reference/saveMsObject.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save and load MS data objects to and from different file formats — saveMsObject","text":"","code":"saveMsObject(object, param, ...)  readMsObject(object, param, ...)"},{"path":"https://rformassspectrometry.github.io/MsIO/reference/saveMsObject.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save and load MS data objects to and from different file formats — saveMsObject","text":"object saveMsObject(): MS data object save, readMsObject(): MS data object returned param object defining (eventually configuring) file format file name directory /data object exported/imported. ... additional optional arguments. See documentation respective method information.","code":""},{"path":"https://rformassspectrometry.github.io/MsIO/reference/saveMsObject.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save and load MS data objects to and from different file formats — saveMsObject","text":"saveMsObject() return value, readMsObject expected return instance class defined object.","code":""},{"path":"https://rformassspectrometry.github.io/MsIO/reference/saveMsObject.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Save and load MS data objects to and from different file formats — saveMsObject","text":"Philippine Louail, Johannes Rainer, Laurent Gatto","code":""},{"path":[]},{"path":"https://rformassspectrometry.github.io/MsIO/news/index.html","id":"changes-in-0-0","dir":"Changelog","previous_headings":"","what":"Changes in 0.0.2","title":"Version 0.0","text":"Refactor code text-based import export MS data objects.","code":""}]
